// Copyright 2024 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package secretflow.spec.extend;

option java_package = "org.secretflow.spec.extend";

message Features {
  // feature names of one party
  repeated string feature_names = 1;
}

message Common {
  // base_score
  double base = 1;
  string link = 2;
  // key is party, value features
  map<string, Features> partition_column = 3;
  // number of decision trees
  int32 tree_num = 4;
}

message TreeLeafWeights {
  // leaf weights of single tree
  repeated double weights = 1;
}

message EnsembleLeafWeights {
  // leaf weights of all trees of ensemble
  repeated TreeLeafWeights tree_leaf_weights = 1;
}

message SplitTree {
  // if -1, it means other party's feature
  repeated int32 split_features = 1;
  // if Infinity, it means other party's value
  repeated double split_values = 2;
  repeated int32 split_indices = 3;
  repeated int32 leaf_indices = 4;
}

message EnsembleSplitTrees {
  repeated SplitTree split_trees = 1;
}

message SgbModel {
  string label_holder = 1;
  Common common = 2;
  EnsembleLeafWeights ensemble_leaf_weights = 3;
  // key is party
  map<string, EnsembleSplitTrees> ensemble_split_trees = 4;
}
