"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2023 Ant Group Co., Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class AddColumnInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    name: builtins.str
    type: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name", "type", b"type"]) -> None: ...

global___AddColumnInfo = AddColumnInfo

@typing.final
class TableMetaChange(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DROP_COLUMNS_FIELD_NUMBER: builtins.int
    NEW_FEATURES_FIELD_NUMBER: builtins.int
    NEW_LABELS_FIELD_NUMBER: builtins.int
    @property
    def drop_columns(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def new_features(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddColumnInfo]: ...
    @property
    def new_labels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddColumnInfo]: ...
    def __init__(
        self,
        *,
        drop_columns: collections.abc.Iterable[builtins.str] | None = ...,
        new_features: collections.abc.Iterable[global___AddColumnInfo] | None = ...,
        new_labels: collections.abc.Iterable[global___AddColumnInfo] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["drop_columns", b"drop_columns", "new_features", b"new_features", "new_labels", b"new_labels"]) -> None: ...

global___TableMetaChange = TableMetaChange
