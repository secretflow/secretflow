# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022 Ant Group Co., Ltd.
# This file is distributed under the same license as the SecretFlow package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: SecretFlow \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-05 16:25+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../developer/algorithm/secure_aggregation.ipynb:9
msgid "Secure Aggregation"
msgstr "安全聚合"

#: ../../developer/algorithm/secure_aggregation.ipynb:20
msgid ""
"The following codes are demos only. It’s **NOT for production** due to "
"system security concerns, please **DO NOT** use it directly in "
"production."
msgstr "注意： 以下代码仅供演示用途，在演示过程中可能会揭露部分信息。请勿直接将此示例代码用于实际生产环境中。在实际部署前，请根据您的具体需求和安全标准进行必要的修改和调整。"

#: ../../developer/algorithm/secure_aggregation.ipynb:31
msgid ""
"It is recommended to use `jupyter <https://jupyter.org/>`__ to run this "
"tutorial."
msgstr "推荐使用 `jupyter <https://jupyter.org/>`__ 运行教程里的代码。"

#: ../../developer/algorithm/secure_aggregation.ipynb:42
msgid ""
"Secure aggregation can be expressed as multiple parties owning data, and "
"cooperating to complete the computation of aggregated values (such as "
"summation) without revealing their private data."
msgstr "安全聚合可以表述为：多个参数方在不暴露各自私有数据的前提下合作完成聚合值计算（比如求和）。"

#: ../../developer/algorithm/secure_aggregation.ipynb:44
msgid ""
"Secure aggregation is an important concept in federated learning. There "
"have been many studies in the academic community. SecretFlow has used "
"secure aggregation in horizontal federated gradient/weight aggregation "
"and data statistics (such as data exploration and preprocessing)."
msgstr "安全聚合是联邦学习中的重要概念。学术界对此已经有较多研究。隐语在水平联邦学习（梯度/权重聚合）、数据处理（比如数据探查、预处理）等方面使用了安全聚合。"

#: ../../developer/algorithm/secure_aggregation.ipynb:46
msgid "The following explains the secure aggregation used by secretflow."
msgstr "下面将介绍隐语使用的安全聚合方案。"

#: ../../developer/algorithm/secure_aggregation.ipynb:58
msgid "Preparation"
msgstr "数据准备"

#: ../../developer/algorithm/secure_aggregation.ipynb:60
msgid "Initialize SecretFlow."
msgstr "初始化SecretFlow。"

#: ../../developer/algorithm/secure_aggregation.ipynb:85
msgid "Prepare some data for testing."
msgstr "准备测试数据。"

#: ../../developer/algorithm/secure_aggregation.ipynb:189
msgid "Create parties alice and bob."
msgstr "创建alice和bob两个参与方。"

#: ../../developer/algorithm/secure_aggregation.ipynb:211
msgid "Aggregate operation"
msgstr "聚合操作"

#: ../../developer/algorithm/secure_aggregation.ipynb:213
msgid ""
"SecretFlow provides a variety of ``Aggregator`` for users to choose from,"
" each ``Aggregator`` provides the function of sum/average."
msgstr "隐语提供了多种 `Aggregator` 供用户选择，每种 `Aggregator` 均提供了sum（求和）和average（求平均）方法。"

#: ../../developer/algorithm/secure_aggregation.ipynb:216
msgid "SPU based security aggregation"
msgstr "基于SPU的安全聚合。"

#: ../../developer/algorithm/secure_aggregation.ipynb:218
msgid ""
"`SPU <../design/spu.md>`__ is a security device in SecretFlow, and its "
"underlying principle is `MPC <https://en.wikipedia.org/wiki/Secure_multi-"
"party_computation>`__. The SecretFlow implements SPU-based secure "
"aggregation, and the following shows how to use it."
msgstr ""
"`SPU <../design/spu.md>`__ 是隐语中的一种安全设备，其基本原理是 `MPC "
"<https://en.wikipedia.org/wiki/Secure_multi-party_computation>`__ "
"。隐语基于SPU实现了安全聚合，下面将介绍如何使用。"

#: ../../developer/algorithm/secure_aggregation.ipynb:334
msgid "Masking with One-Time Pads"
msgstr ""

#: ../../developer/algorithm/secure_aggregation.ipynb:336
msgid ""
"``Masking with One-Time Pads`` negotiates a secret for every two "
"participants, then uses the secret to hide its input :math:`x`, and each "
"participant outputs."
msgstr ""
"`Masking with One-Time Pads` "
"的原理描述如下：参与方两两之间分别协商掩码值，然后使用掩码值来掩藏各自的私有数据，每个参与方输出"

#: ../../developer/algorithm/secure_aggregation.ipynb:338
msgid ""
"y_u = x_u + \\sum_{u < v}s_{u,v} - \\sum_{u > v}s_{u,v}\\ mod\\ R\n"
"\n"
msgstr ""

#: ../../developer/algorithm/secure_aggregation.ipynb:340
msgid ""
"the secrets are cancelled out after aggregation and then we can get the "
"correct result."
msgstr "聚合之后掩码值正好互相抵消，从而可以得到正确的结果。"

#: ../../developer/algorithm/secure_aggregation.ipynb:342
msgid ""
"\\sum y = \\sum x\n"
"\n"
msgstr ""

#: ../../developer/algorithm/secure_aggregation.ipynb:344
msgid ""
"For example, the participants Alice, Bob, and Carol each own :math:`x_1, "
"x_2, x_3`, negotiate the secret :math:`s_{a,b}, s_{a,c}, s_{b,c}`, and "
"then output: :math:`y_1 = x_1 + s_{a,b} + s_{a,c}`"
msgstr ""
"举个例子，假设参与方Alice、Bob、Carol分别持有 :math:`x_1, x_2, x_3` ，分别协商出掩码值 "
":math:`s_{a,b}, s_{a,c}, s_{b,c}`，然后各自输出 :math:`y_1 = x_1 + s_{a,b} + "
"s_{a,c}`"

#: ../../developer/algorithm/secure_aggregation.ipynb:345
msgid ":math:`y_2 = x_2 - s_{a,b} + s_{b,c}`"
msgstr ""

#: ../../developer/algorithm/secure_aggregation.ipynb:346
msgid ":math:`y_3 = x_3 - s_{a,c} - s_{b,c}`"
msgstr ""

#: ../../developer/algorithm/secure_aggregation.ipynb:347
msgid "then it is easy to get"
msgstr "容易得到"

#: ../../developer/algorithm/secure_aggregation.ipynb:349
msgid ""
"y_1 + y_2 + y_3 = x_1 + s_{a,b} + s_{a,c} + x_2 - s_{a,b} + s_{b,c} + x_3"
" - s_{a,c} - s_{b,c} = x_1 + x_2 + x_3\n"
"\n"
msgstr ""

#: ../../developer/algorithm/secure_aggregation.ipynb:351
msgid ""
"Note that ``Masking with One-Time Pads`` is based on semi-honest "
"assumptions and does not support client dropping. For more information, "
"please refer to `Practical Secure Aggregation for Privacy-Preserving "
"Machine Learning <https://eprint.iacr.org/2017/281.pdf>`__"
msgstr ""
"`Masking with One-Time Pads` 基于半诚实假设且不支持掉线，更多信息可以参考  `Practical Secure "
"Aggregation for Privacy-Preserving Machine Learning "
"<https://eprint.iacr.org/2017/281.pdf>`__"

#: ../../developer/algorithm/secure_aggregation.ipynb:353
msgid ""
"**Warning:** The SecureAggregator uses `numpy.random.PCG64 "
"<https://numpy.org/doc/stable/reference/random/bit_generators/pcg64.html#numpy.random.PCG64>`__."
" There are many discussions of whether PCG is a CSPRNG (e.g. "
"https://crypto.stackexchange.com/questions/77101/is-the-pcg-prng-a"
"-csprng-or-why-not), we prefer a conservative strategy unless a further "
"security analysis came up. Therefore we recommend users to use a "
"standardized CSPRNG in industrial scenarios."
msgstr ""
"**警告:** SecureAggregator使用了 `numpy.random.PCG64 "
"<https://numpy.org/doc/stable/reference/random/bit_generators/pcg64.html#numpy.random.PCG64>`__。对于PCG是否是CSPRNG有很多讨论(比如"
" https://crypto.stackexchange.com/questions/77101/is-the-pcg-prng-a"
"-csprng-or-why-not)，我们倾向于保守看待此类讨论，因此我们建议用户在真正工业场景中使用标准的CSPRNG。"

#: ../../developer/algorithm/secure_aggregation.ipynb:455
msgid "Plaintext aggregation (for test only, not recommended for production use)"
msgstr "明文聚合（仅用作测试，请勿在生产中使用）"

#: ../../developer/algorithm/secure_aggregation.ipynb:457
msgid "**``PlainAggregator`` is used for test only and not for production use.**"
msgstr "**PlainAggregator仅用作测试，请勿在生产中使用。**"

#: ../../developer/algorithm/secure_aggregation.ipynb:459
msgid ""
"For simple local simulation, SecretFlow also provides a plaintext "
"aggregator."
msgstr "为了方便本地模拟，隐语也提供了明文聚合方式。"

#: ../../developer/algorithm/secure_aggregation.ipynb:560
msgid "Comparison"
msgstr "比较"

#: ../../developer/algorithm/secure_aggregation.ipynb:562
msgid ""
"In addition, SecretFlow provides a variety of \\``Comparator```, "
"providing operations such as maximum (max)/minimum (min). For example, in"
" horizontal partitioned data scenario, global values can be obtained "
"through secure comparison without exposing the private information of the"
" participants."
msgstr ""
"隐语还提供了多种 `Comparator` "
"用来进行安全比较，比如求最大最小值。举个例子，比如在水平联邦场景下，数据处理时全局的极值会通过安全比较来获得，不会暴露参与方的私有信息。"

#: ../../developer/algorithm/secure_aggregation.ipynb:574
msgid "SPU based security comparison"
msgstr "基于SPU的安全比较"

#: ../../developer/algorithm/secure_aggregation.ipynb:576
msgid ""
"SecretFlow implements SPU-based secure comparison, and the following "
"shows how to use it."
msgstr "隐语基于SPU实现了安全比较，下面将展示如何使用。"

#: ../../developer/algorithm/secure_aggregation.ipynb:677
msgid "Plaintext comparison (not recommended for production use)"
msgstr "明文比较（仅作为测试用，请勿在生产中使用）"

#: ../../developer/algorithm/secure_aggregation.ipynb:679
msgid "**``PlainComparator`` is used for test only and not for production use.**"
msgstr "**PlainComparator仅作为测试用，请勿在生产中使用。**"

#: ../../developer/algorithm/secure_aggregation.ipynb:681
msgid ""
"For simple local simulation, SecretFlow also provides a plaintext "
"comparator."
msgstr "为了方便本地模拟，隐语也提供了明文比较方式。"

#: ../../developer/algorithm/secure_aggregation.ipynb:782
msgid "Ending"
msgstr "收尾"

#: ../../developer/algorithm/secure_aggregation.ipynb:804
msgid "Summarize"
msgstr "总结"

#: ../../developer/algorithm/secure_aggregation.ipynb:806
msgid ""
"This article shows the security aggregation of SecretFlow. SecretFlow "
"provides a variety of security aggregation, and users can implement "
"different security policies according to their own needs. For the "
"plaintext aggregation and compare, it is not recommended to use it in the"
" production environment."
msgstr "本文讲述了隐语中的安全聚合方案。隐语提供了多种安全聚合方法，用户可以根据需要自行选择合适的方案。其中明文聚合和明文比较仅作为测试目的，请勿在生产中使用。"

