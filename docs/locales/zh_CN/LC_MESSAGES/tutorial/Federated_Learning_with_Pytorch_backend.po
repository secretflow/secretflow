# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022 Ant Group Co., Ltd.
# This file is distributed under the same license as the SecretFlow package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: SecretFlow \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-03 15:40+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:9
msgid "Federated Learning with Pytorch Backend"
msgstr "使用Pytorch后端来进行联邦学习"

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:20
msgid ""
"The following codes are demos only. It’s **NOT for production** due to "
"system security concerns, please **DO NOT** use it directly in "
"production."
msgstr "注意： 以下代码仅供演示用途，在演示过程中可能会揭露部分信息。请勿直接将此示例代码用于实际生产环境中。在实际部署前，请根据您的具体需求和安全标准进行必要的修改和调整。"

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:31
msgid ""
"In this tutorial, We will walk you through how to use pytorch backend on "
"SecretFlow for federated learning."
msgstr "在本教程中，我们将引导您了解如何在 SecretFlow 上使用 pytorch 后端进行联邦学习。"

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:33
msgid "We will use the image classification task as example"
msgstr "我们将以图像分类任务为例"

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:34
msgid "Use pytorch as backend"
msgstr "使用 pytorch 作为后端"

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:35
msgid "We will show how to use multi fl strategy"
msgstr "我们将展示如何使用多种 fl 策略"

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:37
msgid ""
"If you want to learn more about federated learning, datasets, etc., you "
"can move to `Federated Learning for Image Classification "
"<Federate_Learning_for_Image_Classification.ipynb>`__."
msgstr ""
"如果你想了解更多关于联邦学习、数据集等的知识，可以移步 `水平联邦：图像分类 "
"<Federate_Learning_for_Image_Classification.ipynb>`__ 。"

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:39
msgid "**Here we go!**"
msgstr "**开始吧**"

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:106
msgid "Here, let us first introduce some concepts"
msgstr "在这里，让我们首先介绍一些概念。 "

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:108
msgid "BaseModule: Similar to the ``torch.nn.module``."
msgstr "BaseModule: 类似于 ``torch.nn.module``"

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:109
msgid ""
"TorchModel: A wrap class include ``loss_fn``,\\ ``optim_fn``,\\ "
"``model_def``,\\ ``metrics``."
msgstr "TorchModel: 一个包装类包括 ``loss_fn``,\\ ``optim_fn``,\\ "

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:110
msgid "metric_wrapper: Wrap metrics to workers."
msgstr "metric_wrapper: metrics包装器"

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:111
msgid "optim_wrapper: Wrap optim_fn to workers."
msgstr "optim_wrapper： optim_fn包装器"

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:112
msgid ""
"FLModel: Federated model, use ``backend`` to specify which backend will "
"be used, use ``strategy`` to specify which federated strategy will be used."
msgstr "FLModel：联合模型，使用 ``backend`` 指定哪个backend将被使用，使用 ``strategy`` 来指定将使用哪个联合策略"

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:140
msgid ""
"When we define the model, we only need to inherit ``BaseModule`` instead "
"of ``nn.Module``, and the others are consistent with pytorch."
msgstr "当我们定义模型时，我们只需要继承 ``BaseModule`` 来代替 ``nn.Module`` 的，其他与pytorch一致。"

#: ../../tutorial/Federated_Learning_with_Pytorch_backend.ipynb:175
msgid ""
"We can continue to use the loss function and optimizer defined in "
"pytorch, the only difference is that we need to wrap it with the wrapper "
"provided in secretflow."
msgstr "我们可以继续使用在pytorch中定义的损失函数和优化器，在secretflow中唯一的区别是我们需要用包装器来包装它。"

